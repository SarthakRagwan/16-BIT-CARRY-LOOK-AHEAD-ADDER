$date
	Tue Jun 10 00:06:21 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module test $end
$var wire 17 ! sum [16:0] $end
$var wire 1 " cy_out $end
$var reg 1 # cy_in $end
$var reg 16 $ in1 [15:0] $end
$var reg 16 % in2 [15:0] $end
$scope module b16a $end
$var wire 1 # cy_in $end
$var wire 16 & in1 [15:0] $end
$var wire 16 ' in2 [15:0] $end
$var wire 17 ( sum [16:0] $end
$var wire 1 " cy_out $end
$var wire 3 ) carry [3:1] $end
$scope module ad1 $end
$var wire 1 # cy_in $end
$var wire 1 * cy_out $end
$var wire 4 + in1 [3:0] $end
$var wire 4 , in2 [3:0] $end
$var wire 4 - sum [3:0] $end
$var wire 3 . carry [3:1] $end
$upscope $end
$scope module ad2 $end
$var wire 1 / cy_in $end
$var wire 1 0 cy_out $end
$var wire 4 1 in1 [3:0] $end
$var wire 4 2 in2 [3:0] $end
$var wire 4 3 sum [3:0] $end
$var wire 3 4 carry [3:1] $end
$upscope $end
$scope module ad3 $end
$var wire 1 5 cy_in $end
$var wire 1 6 cy_out $end
$var wire 4 7 in1 [3:0] $end
$var wire 4 8 in2 [3:0] $end
$var wire 4 9 sum [3:0] $end
$var wire 3 : carry [3:1] $end
$upscope $end
$scope module ad4 $end
$var wire 1 ; cy_in $end
$var wire 1 " cy_out $end
$var wire 4 < in1 [3:0] $end
$var wire 4 = in2 [3:0] $end
$var wire 4 > sum [3:0] $end
$var wire 3 ? carry [3:1] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 ?
b0 >
b0 =
b0 <
0;
b0 :
b0 9
b0 8
b0 7
06
05
b0 4
b0 3
b0 2
b0 1
00
0/
b0 .
b0 -
b0 ,
b0 +
0*
b0 )
b0 (
b0 '
b0 &
b0 %
b0 $
0#
0"
b0 !
$end
#50
b111 .
b1 4
b100 ?
1"
b110 3
b110 9
b1010 -
b11011011001101010 !
b11011011001101010 (
b1011 >
b11 ,
b101 2
b110 8
b1100 =
b111 +
b1 1
b1111 <
b1100011001010011 %
b1100011001010011 '
b1111000000010111 $
b1111000000010111 &
#100
1;
16
b111 :
1/
1*
15
b111 ?
b0 4
b111 )
10
b1000 >
b11 3
b0 9
b11000000000110100 !
b11000000000110100 (
b100 -
b111 ,
b1000 2
b0 8
b1001 =
b1100 +
b1010 1
b1111 7
b1110 <
1#
b1001000010000111 %
b1001000010000111 '
b1110111110101100 $
b1110111110101100 &
#150
0/
0*
b110 :
b1 .
05
b100 4
b100 )
00
0"
b1011 3
b101 9
b1110 -
b1001010110111110 !
b1001010110111110 (
b1001 >
b1101 ,
b111 2
b110 8
b101 =
b0 +
b100 1
b11 <
b101011001111101 %
b101011001111101 '
b11111101000000 $
b11111101000000 &
#200
1/
1*
15
b111 )
10
b111 :
b111 .
b111 4
b111 9
b110 -
b111 3
b1000011101110110 !
b1000011101110110 (
b1000 >
b1110 ,
b1111 2
b1111 8
b111 =
b111 +
b111 1
b111 7
b0 <
b111111111111110 %
b111111111111110 '
b11101110111 $
b11101110111 &
#250
